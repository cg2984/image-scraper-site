{"version":3,"sources":["imageCard.js","landing.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCard","Landing","props","w","h","margin","display","alignItems","justifyContent","as","size","textAlign","verticalAlign","color","href","fontWeight","isExternal","ExternalLink","mx","App","imageArray","data","images","useState","link","setLink","setOpenState","initialRef","React","useRef","useDisclosure","isOpen","onOpen","onClose","className","id","spacing","align","justify","undefined","console","log","map","image","motion","div","onClick","handleClick","whileHover","scale","rotate","whileTap","boxSize","fit","src","initialFocusRef","isCentered","bg","variant","mr","colorScheme","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","theme","StrictMode","document","getElementById"],"mappings":"mMAYeA,I,oCCmBAC,MAzBf,SAAiBC,GACf,OACC,cAAC,IAAD,CACCC,EAAE,MACFC,EAAE,OACFC,OAAO,YACPC,QAAQ,OACRC,WAAW,SACXC,eAAe,SANhB,SAQE,eAAC,IAAD,CACGC,GAAG,KACHC,KAAK,KACLL,OAAO,OACPM,UAAU,SACVC,cAAc,SALjB,oDAOG,eAAC,IAAD,CAAMP,OAAO,SAAQQ,MAAM,aAAaC,KAAK,8CAA8CC,WAAW,MAAMC,YAAU,EAAtH,6BACkB,cAACC,EAAA,EAAD,CAAkBC,GAAG,iB,6CCwEhCC,MAvEf,WACE,IAAMC,EAAaC,EAAKC,OADX,EAEWC,mBAAS,QAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGqBF,mBAAS,MAH9B,mBAGKG,GAHL,WAIPC,EAAaC,IAAMC,SAJZ,EASuBC,cAA5BC,EATK,EASLA,OAAQC,EATH,EASGA,OAAQC,EATX,EASWA,QAExB,OACE,eAAC,IAAD,CACEC,UAAU,MACVC,GAAG,MAFL,UAIE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMC,QAAQ,OAAOC,MAAM,SAASC,QAAQ,SAA5C,cAEsBC,IAAlBnB,EAAW,GACToB,QAAQC,IAAI,aACZrB,EAAWsB,KAAI,SAACC,GAAD,OACb,cAACC,EAAA,EAAOC,IAAR,CACEC,QAAW,kBAlBL,SAACtB,GAAD,OAClBC,EAAQD,GACRE,EAAaM,GAgBee,CAAYJ,IAC5BT,UAAU,cACVc,WAAY,CACVC,MAAO,KACPC,OAAQ,IAEVC,SAAU,CACRF,MAAO,GACPC,QAAS,IATb,SAYA,cAAC,IAAD,UACE,cAAC,IAAD,CACEhB,UAAY,QACZkB,QAAQ,QACRC,IAAI,QACJC,IAAKX,aAQjB,eAAC,IAAD,CAAOZ,OAAQA,EAAQE,QAASA,EAASvB,KAAM,KAAM6C,gBAAiB5B,EAAY6B,YAAU,EAA5F,UACE,cAAC,IAAD,CAAcC,GAAG,aACjB,eAAC,IAAD,WACE,cAAC,IAAD,CACEH,IAAK9B,IAGP,eAAC,IAAD,WACE,cAAC,IAAD,CAAQf,GAAG,IAAIK,KAAMU,EAAMkC,QAAQ,QAAQC,GAAI,EAAGb,QAASb,EAASjB,YAAY,EAAhF,mCAGA,cAAC,IAAD,CAAQ4C,YAAY,SAASD,GAAI,EAAGb,QAASb,EAAS4B,IAAKlC,EAA3D,4BAMN,cAAC,IAAD,CAAQlB,GAAG,IAAIK,KAAK,OAAOT,OAAO,OAAOM,UAAU,SAASiD,YAAY,SAASlD,KAAK,KAAtF,6BC7ESoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCAdQ,IAASC,OACP,eAAC,IAAD,CAAeC,MAAOA,QAAtB,UACE,cAAC,IAAD,IACA,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.3feaa65a.chunk.js","sourcesContent":["import { Image } from \"@chakra-ui/react\";\r\nimport { Wrap, WrapItem } from \"@chakra-ui/react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { motion } from \"framer-motion\";\r\n\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n\t<div>Something</div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import { motion } from \"framer-motion\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { Link } from \"@chakra-ui/react\"\r\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\r\nimport { Box } from \"@chakra-ui/react\"\r\n\r\nfunction Landing(props) {\r\n  return (\r\n  \t<Box \r\n  \t\tw=\"90%\" \r\n  \t\th=\"80vh\" \r\n  \t\tmargin=\"10px auto\"\r\n  \t\tdisplay=\"flex\"\r\n  \t\talignItems=\"center\"\r\n  \t\tjustifyContent=\"center\"\r\n  \t>\r\n  \t  <Heading \r\n        as=\"h2\" \r\n        size=\"lg\" \r\n        margin=\"50px\" \r\n        textAlign=\"center\" \r\n        verticalAlign=\"middle\"\r\n      >  The Top 50 Most Popular Pictures from\r\n        <Link margin=\"0 10px\"color=\"orange.300\" href=\"https://old.reddit.com/r/nocontextpics/top/\" fontWeight=\"400\" isExternal>\r\n          r/nocontextpics <ExternalLinkIcon mx=\"2px\" />\r\n        </Link>\r\n      </Heading> \r\n  \t</Box>\r\n  );\r\n}\r\n\r\nexport default Landing;","import './App.css';\nimport data from \"./data/images.json\";\nimport { Wrap, WrapItem } from \"@chakra-ui/react\";\nimport ImageCard from \"./imageCard.js\";\nimport Landing from \"./landing.js\";\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { motion, useViewportScroll } from \"framer-motion\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/react\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from 'react';\n\n\n\n\n\nfunction App() {\n  const imageArray = data.images;\n  const [link, setLink] = useState(\"test\");\n  const [openState, setOpenState] = useState(null)\n  const initialRef = React.useRef()\n  const handleClick = (link) => (\n    setLink(link),\n    setOpenState(onOpen)\n  )\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  return (\n    <Box \n      className=\"App\" \n      id=\"top\"\n    > \n      <Landing/>\n      <Wrap spacing=\"30px\" align=\"center\" justify=\"center\">           \n        {/*for some reason the map the image isnt the key its the link to each image*/}\n        {(imageArray[0] === undefined) \n          ? console.log(\"undefined\") \n          : imageArray.map((image) => \n              <motion.div\n                onClick = {()=> handleClick(image)} \n                className=\"motion_card\"\n                whileHover={{ \n                  scale: 1.05,\n                  rotate: 0.5\n                }}  \n                whileTap={{ \n                  scale: 0.9,\n                  rotate: -0.5\n                }}  \n            >\n              <WrapItem>\n                <Image\n                  className = \"image\"\n                  boxSize=\"400px\"\n                  fit=\"cover\" \n                  src={image}\n                >\n                </Image>\n              </WrapItem>\n            </motion.div>\n            )\n        } \n      </Wrap>\n      <Modal isOpen={isOpen} onClose={onClose} size={\"xl\"} initialFocusRef={initialRef} isCentered>\n        <ModalOverlay bg=\"gray.100\"/>\n        <ModalContent>\n          <Image\n            src={link}\n          >\n          </Image>\n          <ModalFooter>\n            <Button as=\"a\" href={link} variant=\"ghost\" mr={3} onClick={onClose} isExternal={true}>\n              Open Image in New Tab\n            </Button>\n            <Button colorScheme=\"orange\" mr={3} onClick={onClose} ref={initialRef}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      <Button as=\"a\" href=\"#top\" margin=\"50px\" textAlign=\"center\" colorScheme=\"orange\" size=\"md\">\n        Back to Top\n      </Button>  \n    </Box>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme, ThemeProvider, CSSReset } from \"@chakra-ui/react\";  \n\nReactDOM.render(  \n  <ThemeProvider theme={theme}>  \n    <CSSReset />  \n    <React.StrictMode>  \n      <App />  \n    </React.StrictMode>  \n  </ThemeProvider>,  \n  document.getElementById('root')  \n);  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}