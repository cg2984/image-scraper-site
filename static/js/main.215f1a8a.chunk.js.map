{"version":3,"sources":["imageCard.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCard","props","border","borderColor","borderStyle","borderRadius","boxShadow","htmlWidth","src","link","App","imageArray","data","images","useSpring","xys","config","mass","tension","friction","className","id","as","size","margin","textAlign","color","href","isExternal","spacing","align","justify","undefined","console","log","map","image","colorScheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","theme","StrictMode","document","getElementById"],"mappings":"6MAwBeA,MAnBf,SAAmBC,GACjB,OACC,8BACE,cAAC,IAAD,UACF,cAAC,IAAD,CACCC,OAAO,MACPC,YAAY,WACZC,YAAY,QACTC,aAAa,MACbC,UAAU,KACbC,UAAU,QACVC,IAAKP,EAAMQ,Y,mCC0BAC,MAjCf,WACE,IAAMC,EAAaC,EAAKC,OADX,EAOQC,qBAAU,iBAAO,CAAEC,IAAK,CAAC,EAAG,EAAG,GAAIC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,QAPtF,mBAQb,OARa,UASX,sBAAKC,UAAU,MAAMC,GAAG,MAAxB,UACE,eAAC,IAAD,CACEC,GAAG,KACHC,KAAK,KACLC,OAAO,OACPC,UAAU,SAJZ,0BAOE,cAAC,IAAD,CAAMD,OAAO,SAAQE,MAAM,aAAaC,KAAK,8CAA8CC,YAAU,EAArG,gCAIF,cAAC,IAAD,CAAMC,QAAQ,OAAOC,MAAM,SAASC,QAAQ,SAA5C,cAEsBC,IAAlBrB,EAAW,GAAoBsB,QAAQC,IAAI,aAAevB,EAAWwB,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAW3B,KAAM2B,SAEzG,cAAC,IAAD,CAAQd,GAAG,IAAIK,KAAK,OAAOH,OAAO,OAAOC,UAAU,SAASY,YAAY,SAASd,KAAK,KAAtF,6BCtBSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCAdQ,IAASC,OACP,eAAC,IAAD,CAAeC,MAAOA,QAAtB,UACE,cAAC,IAAD,IACA,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.215f1a8a.chunk.js","sourcesContent":["import { Image } from \"@chakra-ui/react\";\r\nimport { Wrap, WrapItem } from \"@chakra-ui/react\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n  \t<div>\r\n\t    <WrapItem>\r\n\t\t\t<Image\r\n\t\t\t\tborder=\"4px\" \r\n\t\t\t\tborderColor=\"gray.700\"\r\n\t\t\t\tborderStyle=\"solid\"\r\n\t    \t\tborderRadius=\"5px\"\r\n\t    \t\tboxShadow=\"md\" \r\n\t\t\t\thtmlWidth=\"400px\" \r\n\t\t\t\tsrc={props.link}\r\n\t\t\t>\r\n\t\t\t</Image>\r\n\t\t</WrapItem>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import './App.css';\nimport data from \"./data/images.json\";\nimport { Wrap, WrapItem } from \"@chakra-ui/react\";\nimport ImageCard from \"./imageCard.js\";\nimport { Heading } from \"@chakra-ui/react\";\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { Link } from \"@chakra-ui/react\";\nimport {useSpring, animated} from 'react-spring'\n\nfunction App() {\n  const imageArray = data.images;\n  //directly importing code from the react spring to test out here\n  //doing the math to calculate the movement i think\n  const calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\n  const trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n  //configuring use spring\n  const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\n  return (\n    <div className=\"App\" id=\"top\">\n      <Heading \n        as=\"h2\" \n        size=\"lg\" \n        margin=\"50px\" \n        textAlign=\"center\" \n      >\n        Top Pics from \n        <Link margin=\"0 10px\"color=\"orange.300\" href=\"https://old.reddit.com/r/nocontextpics/top/\" isExternal>\n          r/nocontextpics\n        </Link>\n      </Heading> \n      <Wrap spacing=\"30px\" align=\"center\" justify=\"center\">           \n        {/*for some reason the map the image isnt the key its the link to each image*/}\n        {(imageArray[0] === undefined) ? console.log(\"undefined\") : imageArray.map((image) => <ImageCard link={image}/>)} \n      </Wrap>\n      <Button as=\"a\" href=\"#top\" margin=\"50px\" textAlign=\"center\" colorScheme=\"orange\" size=\"md\">\n        Back to Top\n      </Button>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme, ThemeProvider, CSSReset } from \"@chakra-ui/react\";  \n\nReactDOM.render(  \n  <ThemeProvider theme={theme}>  \n    <CSSReset />  \n    <React.StrictMode>  \n      <App />  \n    </React.StrictMode>  \n  </ThemeProvider>,  \n  document.getElementById('root')  \n);  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}